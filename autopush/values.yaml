global:
  image:
    # -- if set it will overwrite all registry entries
    registry:
    # -- if set it will overwrite all pullPolicy
    pullPolicy:

# -- This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# -- This is to override the chart name.
nameOverride: ""
fullnameOverride: ""


config:
  logs:
    # -- set log level of autopush
    level: warn
    # -- enable backtrace of autopush
    backtrace: false
  # -- run https://github.com/mozilla-services/autopush-rs/blob/master/scripts/fernet_key.py
  cryptoKey: ""

prometheus:
  # -- start statsd sidecar and configure
  enabled: true

  servicemonitor:
    enabled: false
    labels: {}
  rules:
    enabled: false
    labels: {}
    default:
      enabled: true
      alertLabels: {}
    additionalRules: []

  image:
    registry: docker.io
    repository: prom/statsd-exporter
    pullPolicy: IfNotPresent
    tag: v0.28.0

  # -- securityContext
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  securityContext: {}

  # -- We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  resources: {}

  # -- This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /
      port: metrics
  readinessProbe:
    httpGet:
      path: /
      port: metrics

  # -- Additional volumeMounts on the output Deployment definition.
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
  volumeMounts: []

grafana:
  dashboards:
    enabled: false
    labels:
      grafana_dashboard: "1"
    annotations: {}

## This configuration is for the internal Redis that's deployed for use with
## workers/sharding, for an external Redis server you want to set enabled to
## false and configure the externalRedis block.
##
redis:
  internal: true
  # -- Database ID for non-default database
  dbid: 0

  auth:
    enabled: true
    # -- XXX Change me!
    password: autopush
    # -- name of an existing secret with Redis credentials (instead of auth.password), must be created ahead of time
    existingSecret: ""
    # -- Password key to be retrieved from existing secret
    existingSecretPasswordKey: ""

  external:
    host: redis
    port: 6379

    # -- Password key to be retrieved from existing secret
    existingSecretPasswordKey: redis-password


  architecture: standalone
  global:
    storageClass: ""
  master:
    persistence:
      enabled: true
    service:
      port: 6379
  replica:
    persistence:
      enabled: true

autoconnect:
  # -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  # @section -- Autoconnect
  replicaCount: 1
  image:
    # -- image registry (could be overwritten by global.image.registry)
    # @section -- Autoconnect
    registry: codeberg.org
    # -- image repository
    # @section -- Autoconnect
    repository: wrenix/autopush/autoconnect
    # -- This sets the pull policy for images. (could be overwritten by global.image.pullPolicy)
    # @section -- Autoconnect
    pullPolicy: IfNotPresent
    # -- image tag - Overrides the image tag whose default is the chart appVersion.
    # @section -- Autoconnect
    tag: latest
  # -- This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  # @section -- Autoconnect
  podAnnotations: {}
  # -- This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  # @section -- Autoconnect
  podLabels: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podSecurityContext: {}
    # fsGroup: 2000

  # -- securityContext
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # @section -- Autoconnect
  securityContext: {}

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # -- This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    # @section -- Autoconnect
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    ports:
      # -- port of http service
      # @section -- Autoconnect
      http: 80
      # -- port of internal router service
        # @section -- Autoconnect
      router: 8081

  # -- We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # @section -- Autoconnect
  resources: {}

  # -- This is to setup the liveness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  # @section -- Autoconnect
  livenessProbe:
    httpGet:
      path: /health
      port: http
  # -- This is to setup the readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  # @section -- Autoconnect
  readinessProbe:
    httpGet:
      path: /health
      port: http

  # -- Additional volumeMounts on the output Deployment definition.
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
  # @section -- Autoconnect
  volumeMounts: []

autoendpoint:
  # -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  # @section -- Autoendpoint
  replicaCount: 1
  image:
    # -- image registry (could be overwritten by global.image.registry)
    # @section -- Autoendpoint
    registry: codeberg.org
    # -- image repository
    # @section -- Autoendpoint
    repository: wrenix/autopush/autoendpoint
    # -- This sets the pull policy for images. (could be overwritten by global.image.pullPolicy)
    # @section -- Autoendpoint
    pullPolicy: IfNotPresent
    # -- image tag - Overrides the image tag whose default is the chart appVersion.
    # @section -- Autoendpoint
    tag: latest

  # -- This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  # @section -- Autoendpoint
  podAnnotations: {}
  # -- This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  # @section -- Autoendpoint
  podLabels: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # -- This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    # @section -- Autoendpoint
    type: ClusterIP
    # -- This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    # @section -- Autoendpoint
    port: 80

  # -- We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # @section -- Autoendpoint
  resources: {}

  # -- This is to setup the liveness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  # @section -- Autoendpoint
  livenessProbe:
    httpGet:
      path: /health
      port: http
  # -- This is to setup the readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  # @section -- Autoendpoint
  readinessProbe:
    httpGet:
      path: /health
      port: http

  # -- Additional volumeMounts on the output Deployment definition.
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
  # @section -- Autoendpoint
  volumeMounts: []

unifiedPush:
  # -- enable/deploy common-proxy for unifiedpush
  # @section -- UnifiedPush
  enabled: false
  # -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  # @section -- UnifiedPush
  replicaCount: 1
  image:
    # -- image registry (could be overwritten by global.image.registry)
    # @section -- UnifiedPush
    registry: docker.io
    # -- image repository
    # @section -- UnifiedPush
    repository: unifiedpush/common-proxies
    # -- This sets the pull policy for images. (could be overwritten by global.image.pullPolicy)
    # @section -- UnifiedPush
    pullPolicy: IfNotPresent
    # -- image tag
    # @section -- UnifiedPush
    tag: "v2.2.0"

  config:
    verbose: false
    uaid: ""
    gateway:
      generic:
        enable: true
      matrix:
        enable: true
      allowedHosts: []

  # -- This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  # @section -- UnifiedPush
  podAnnotations: {}
  # -- This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  # @section -- UnifiedPush
  podLabels: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # -- This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    # @section -- UnifiedPush
    type: ClusterIP
    # -- This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    # @section -- UnifiedPush
    port: 80

  # -- We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # @section -- UnifiedPush
  resources: {}

  # -- This is to setup the liveness more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  # @section -- UnifiedPush
  livenessProbe:
    httpGet:
      path: /health
      port: http
  # -- This is to setup the readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  # @section -- UnifiedPush
  readinessProbe:
    httpGet:
      path: /health
      port: http

  # -- Additional volumeMounts on the output Deployment definition.
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
  # @section -- UnifiedPush
  volumeMounts: []


# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # -- Specifies whether a service account should be created
  # @section -- UnifiedPush
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  # @section -- UnifiedPush
  automount: true
  # -- Annotations to add to the service account
  # @section -- UnifiedPush
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # @section -- UnifiedPush
  name: ""

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


# -- Additional volumes on the output Deployment definition.
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false
volumes: []
