global:
  image:
    # -- if set it will overwrite all registry entries
    registry:
    # -- if set it will overwrite all pullPolicy
    pullPolicy:


# -- replicas
replicaCount: 1

image:
  # -- image registry (could be overwritten by global.image.registry)
  registry: docker.io
  # -- image repository
  repository: matrixconduit/matrix-conduit
  # -- This sets the pull policy for images. (could be overwritten by global.image.pullPolicy)
  pullPolicy: IfNotPresent
  # -- image tag - Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

conduit:
  server_name: "your.server.name"
  allowRegistration: false
  allowEncryption: true
  allowFederation: true
  allowRoomCreation: true
  allowUnstableRoomVersions: true
  trustedServers:
    - "matrix.org"
  # -- in bytes default 20 MB
  maxRequestSize: "20000000"
  # maxConcurrentRequests: 100
  maxConcurrentRequests:
  # log: "warn,rocket=off,_=off,sled=off"
  log:
  registrationToken:
  wellKnown:
    # -- client well-known configuration in conduit
    client: ""
    # -- server well-known configuration in conduit
    server: "https://your.server.name"

wellknown:
  # -- enable/deploy add extra webservice for well-known urls
  # @section -- well known
  enabled: false
  image:
    # -- image registry (could be overwritten by global.image.registry)
    # @section -- well known
    registry: docker.io
    # -- image repository
    # @section -- well known
    repository: library/nginx
    # -- This sets the pull policy for images. (could be overwritten by global.image.pullPolicy)
    # @section -- well known
    pullPolicy: IfNotPresent
    # -- image tag
    # @section -- well known
    tag: "1.27.5"

  # -- replicas
  # @section -- well known
  replicaCount: 1
  # -- pod labels
  # @section -- well known
  podLabels: {}
  # -- pod annotations
  # @section -- well known
  podAnnotations: []
  # -- securityContext of Pod
  # @section -- well known
  podSecurityContext: {}
  # -- securityContext of container
  # @section -- well known
  securityContext: {}
  # -- port webservice
  # @section -- well known
  containerPort: 80
  # -- pod env
  # @section -- well known
  env: []
  # -- pod resources
  # @section -- well known
  resources: {}
  # -- pod node selector
  # @section -- well known
  nodeSelector: {}
  # -- pod tolerations
  # @section -- well known
  tolerations: []
  # -- pod affinity
  # @section -- well known
  affinity: {}

  service:
    # -- service type
    # @section -- well known
    type: ClusterIP
    # -- port of service
    # @section -- well known
    port: 8080
    # -- annotations of service
    # @section -- well known
    annotations: {}

  # -- if ingress is enabled: specifies whether ingress should redirect the `/`-Location to the wellknown server
  # @section -- well known
  rewriteRoot: false

  # -- server entry in well-known
  # @section -- well known
  server:
    "m.server": "your.server.name:443"
  # -- client entry in well-known
  # @section -- well known
  client:
    "m.homeserver":
      "base_url": "https://your.server.name/"
    "org.matrix.msc3575.proxy":
      "url": "https://your.server.name/"

  # -- nginx config
  # @section -- well known
  nginxServerConf: |-
      server {
          listen       {{ .containerPort }};
          server_name  localhost;

          location /.well-known/matrix/server {
            return 200 {{ toJson .server | quote }};
            types { } default_type "application/json; charset=utf-8";
          }

          location /.well-known/matrix/client {
            return 200 {{ toJson .client | quote }};
            types { } default_type "application/json; charset=utf-8";
            add_header "Access-Control-Allow-Origin" *;
          }

          location / {
            # return 200 'Welcome to the your.server.name conduit server!';
            # types { } default_type "text/plain; charset=utf-8";
            return 404;
          }

          location /nginx_health {
            return 200 'OK';
            types { } default_type "text/plain; charset=utf-8";
          }
      }

podLabels: {}
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 6167

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Enable persistence using Persistent Volume Claims
# ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  enabled: true
  annotations: {}
  # --  Persistent Volume Storage Class
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.  (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  storageClass:

  # -- A manually managed Persistent Volume and Claim
  # Requires persistence.enabled: true
  # If defined, PVC must be created manually before volume will be bound
  existingClaim:

  # -- Do not create an PVC, direct use hostPath in Pod
  hostPath:
  accessMode: ReadWriteOnce
  size: 1Gi
