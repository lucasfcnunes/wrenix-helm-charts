global:
  image:
    # -- if set it will overwrite all registry entries
    registry:
    # -- if set it will overwrite all pullPolicy
    pullPolicy:


# -- replicas
replicaCount: 1

image:
  # -- image registry (could be overwritten by global.image.registry)
  registry: ghcr.io
  # -- image repository
  repository: mollyim/mollysocket
  # -- This sets the pull policy for images. (could be overwritten by global.image.pullPolicy)
  pullPolicy: IfNotPresent
  # -- image tag - Overrides the image tag whose default is the chart appVersion.
  tag: ""

kubectl:
  # -- image needed for setup (store generated VAPID / WebPush keys)
  image:
    registry: docker.io
    repository: bitnami/kubectl
    pullPolicy: IfNotPresent
    tag: 1.33.3

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

mollysocket:
  log: "info"
  environment: "Prod"
  allowedUUIDs:
    - "*"
  allowedEnpoints:
    - "*"
  vapidKey:
    # -- generate a vapid key
    create: true
    # -- use own vapid key
    key: ""

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  # Upload (/var/www/html)
  enabled: true
  annotations: {}
  # -- mobilizon data Persistent Volume Storage Class
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.  (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  #
  storageClass: ""

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  # -- Create a PV on Node with given hostPath
  # storageClass has to be manual
  hostPath: ""
  accessMode: ReadWriteOnce
  size: 1Gi

prometheus:
  servicemonitor:
    enabled: false
    labels: {}
  rules:
    enabled: false
    labels: {}
    # current no default alertrules are provided
    additionalRules: []

grafana:
  dashboards:
    enabled: false
    labels:
      grafana_dashboard: "1"
    annotations: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
